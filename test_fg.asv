% test for the FG task


close all; clear all;clc
clear;
global DisplayStepSize;
global ProgramReady;
ProgramReady=0;

% Set random seed:
seed = 11;

% Test length:
epochs = 50000;
n_trials = 10000;


%% Parameters
% learning
gamma  = 0.9;
beta   = 0.15;
lambda = 0.40;

% network hidden units
ny_memory = 15;
ny_normal = 80;

% for experiments, fix the random generator:
rnd_stream = RandStream('mt19937ar','Seed', seed);
RandStream.setDefaultStream(rnd_stream);

%% Figures init
scrsz = get(0,'ScreenSize');
h = figure('Position',[1 25 scrsz(3)/2.8 scrsz(4)/2.8]);
a = axes();
set(a,'NextPlot','replace');

% control of the time between network updates
DisplayStepSize=10000;                  % PR was 1000
uicontrol('Style', 'edit', 'String', int2str(DisplayStepSize),...
    'Position', [20 30 50 30],'Callback',@edittext1_Callback);

%% Network Settings:
%
n = FGNetwork();
n.limit_traces = false;
n.input_method = 'old';

n.n_inputs = 201;%length(t.nwInput);
n.ny_memory = ny_memory;
n.ny_normal = ny_normal;
n.nz =  12; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
n.controller = 'max-boltzmann';
n.exploit_prob = .975;

n.setInstantTransform('shifted-sigmoid',2.5);
n.setMemoryTransform('shifted-sigmoid',2.5);


n.input_noise = false;
n.population_decay = false;
n.gamma = gamma;
n.lambda = lambda;
n.beta = beta;



n.init_network();
